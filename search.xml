<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>有道翻译js漏洞</title>
      <link href="/post/20250202104000.html"/>
      <url>/post/20250202104000.html</url>
      
        <content type="html"><![CDATA[<p>在有道的单词翻译界面，输入一个单词进行请求，然后观察网络发包，通过检查发现webtranslate是请求的具体实现，但是前端js代码被混淆，现在开始突破：</p><h2 id="开始大体了解"><a href="#开始大体了解" class="headerlink" title="开始大体了解"></a>开始大体了解</h2><p><a href="https://blog.csdn.net/ningmengban/article/details/118738013">一个csdn的讲解来更好学习cURL</a><br>所以 过滤器用的选Fetch&#x2F;XHR 然后看的是<font color="#ff0000">载荷与启动器</font><a href="https://imgse.com/i/pAf0NWt"><img src="https://s21.ax1x.com/2024/11/23/pAf0NWt.png" alt="pAf0NWt.png"></a></p><p>然后观察到参数<code>i</code>是传递的单词<br>复制该请求的cURL(bash) （cmd的无法识别）到该网址(<a href="https://curlconverter.com/">https://curlconverter.com/</a>)中转成pythond代码的网络请求。<br><a href="https://www.ruanyifeng.com/blog/2019/09/curl-reference.html">补充CURL</a><br><a href="https://imgse.com/i/pAf0aSP"><img src="https://s21.ax1x.com/2024/11/23/pAf0aSP.png" alt="pAf0aSP.png"></a></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">&#x27;OUTFOX_SEARCH_USER_ID&#x27;</span>: <span class="string">&#x27;-807195057@112.6.224.59&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;OUTFOX_SEARCH_USER_ID_NCOO&#x27;</span>: <span class="string">&#x27;1295680981.8456256&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;UM_distinctid&#x27;</span>: <span class="string">&#x27;1934efa317d26a0-0cf60c63ba6004-26011851-384000-1934efa317e30e9&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DICT_DOCTRANS_SESSION_ID&#x27;</span>: <span class="string">&#x27;Nzc1YzdjMTctY2UwYi00MWRkLTljNWMtYmU0ZDZkYmE2YjFl&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;_uetsid&#x27;</span>: <span class="string">&#x27;1a0d8b00a87b11efb41e654a51bcff2d&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;_uetvid&#x27;</span>: <span class="string">&#x27;1a0dc100a87b11efbea5976598c3a68c&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;_uetmsclkid&#x27;</span>: <span class="string">&#x27;_uet3e4b623b79541aa791a405049652812f&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;application/json, text/plain, */*&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;Cookie&#x27;: &#x27;OUTFOX_SEARCH_USER_ID=-807195057@112.6.224.59; OUTFOX_SEARCH_USER_ID_NCOO=1295680981.8456256; UM_distinctid=1934efa317d26a0-0cf60c63ba6004-26011851-384000-1934efa317e30e9; DICT_DOCTRANS_SESSION_ID=Nzc1YzdjMTctY2UwYi00MWRkLTljNWMtYmU0ZDZkYmE2YjFl; _uetsid=1a0d8b00a87b11efb41e654a51bcff2d; _uetvid=1a0dc100a87b11efbea5976598c3a68c; _uetmsclkid=_uet3e4b623b79541aa791a405049652812f&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;https://fanyi.youdao.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Pragma&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://fanyi.youdao.com/&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Sec-Fetch-Dest&#x27;</span>: <span class="string">&#x27;empty&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Sec-Fetch-Mode&#x27;</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Sec-Fetch-Site&#x27;</span>: <span class="string">&#x27;same-site&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-ch-ua&#x27;</span>: <span class="string">&#x27;&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="string">&#x27;&quot;Windows&quot;&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;i&#x27;</span>: <span class="string">&#x27;banana&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;from&#x27;</span>: <span class="string">&#x27;auto&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;to&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;useTerm&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;dictResult&#x27;</span>: <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;keyid&#x27;</span>: <span class="string">&#x27;webfanyi&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sign&#x27;</span>: <span class="string">&#x27;341027bbf5e4757757192d5cf94ffc62&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;client&#x27;</span>: <span class="string">&#x27;fanyideskweb&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;product&#x27;</span>: <span class="string">&#x27;webfanyi&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;appVersion&#x27;</span>: <span class="string">&#x27;1.0.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;vendor&#x27;</span>: <span class="string">&#x27;web&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;pointParam&#x27;</span>: <span class="string">&#x27;client,mysticTime,product&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mysticTime&#x27;</span>: <span class="string">&#x27;1732276669901&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;keyfrom&#x27;</span>: <span class="string">&#x27;fanyi.web&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mid&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;screen&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;model&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;network&#x27;</span>: <span class="string">&#x27;wifi&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;abtest&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;yduuid&#x27;</span>: <span class="string">&#x27;abcdefg&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.post(<span class="string">&#x27;https://dict.youdao.com/webtranslate&#x27;</span>, cookies=cookies, headers=headers, data=data)</span><br><span class="line"><span class="comment">#加一句</span></span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><p>对这个代码进行运行<br>1.修改i的值去看能不能翻译 发现不可以<br>2.同时响应内容被加密不能直观读出来</p><h2 id="请求逆向分析"><a href="#请求逆向分析" class="headerlink" title="请求逆向分析"></a>请求逆向分析</h2><p>然后开始找一些变化的量去逆向：对比一下不同词的请求，会发现两处不一样，一个是<code>sign</code> 值，还有一个是<code>mysticTime</code> 值<br><strong>所以猜测是，本地js签名了一个sign值，远程服务器校验了这个sign，导致我们直接修改i的话是无法成功拿到数据的。</strong><br>所以我们的目标是<strong>逆向这两个变化值</strong></p><p>先从webtranslate这个包中的第一个调用堆栈去看<br>在send处打上断点 然后重新请求一下（指输入不同单词），发现该函数的调用堆栈<br><a href="https://imgse.com/i/pAf0tJI"><img src="https://s21.ax1x.com/2024/11/23/pAf0tJI.png" alt="pAf0tJI.png"></a><br>进入xhr请求函数（随便进入一个都可以）<br>要在<strong>作用域</strong>中的 params参数中去看 发包发出去了什么变量 发现sign已经生成<a href="https://imgse.com/i/pAf0dQf"><img src="https://s21.ax1x.com/2024/11/23/pAf0dQf.png" alt="pAf0dQf.png"></a><br>然后去调用堆栈中一个个函数去找 观察哪一个生成了sign<br>这里的I函数没有sign，而上一个I是有sign值的，说明是在这一步去进行了sign值生成 所以重点分析这里<br><a href="https://imgse.com/i/pAf00OS"><img src="https://s21.ax1x.com/2024/11/23/pAf00OS.png" alt="pAf00OS.png"></a><a href="https://imgse.com/i/pAf0Deg"><img src="https://s21.ax1x.com/2024/11/23/pAf0Deg.png" alt="pAf0Deg.png"></a><br>给I跟下面的匿名打上断点 去分析两者夹着的代码，因为此时sign在t变量里面 所以去看含t的就函数 发现K(t)非常可疑<br><a href="https://imgse.com/i/pAfBRNd"><img src="https://s21.ax1x.com/2024/11/23/pAfBRNd.png" alt="pAfBRNd.png"></a><br>控制台用一下<br><a href="https://imgse.com/i/pAf0wy8"><img src="https://s21.ax1x.com/2024/11/23/pAf0wy8.png" alt="pAf0wy8.png"></a><br>接下来分析k(t)是如何实现的，在k(t)前面去断点调试<a href="https://imgse.com/i/pAf0rwQ"><img src="https://s21.ax1x.com/2024/11/23/pAf0rwQ.png" alt="pAf0rwQ.png"></a></p><p>这里我们很明显发现sign值就是k生成显示的，其值是由S函数生成的，往上一看就是S的调用，它又调用了一个匿名函数，是md5算法，加密的字符串就是简单的拼接这个字符串 </p><p><code>return _(`client=$&#123;d&#125;&amp;mysticTime=$&#123;e&#125;&amp;product=$&#123;u&#125;&amp;key=$&#123;t&#125;`)</code><br><a href="https://imgse.com/i/pAf0YFA"><img src="https://s21.ax1x.com/2024/11/23/pAf0YFA.png" alt="pAf0YFA.png"></a></p><h3 id="逻辑："><a href="#逻辑：" class="headerlink" title="逻辑："></a>逻辑：</h3><p>k⽣成了Sign<br>k返回的是⼀个data字典<br>字典⾥的sign值是由S函数⽣成的<br>S函数调⽤了_匿名函数<br>且_函数调⽤md5加密了内容⽣成sign值</p><p>其中d就是<code>fanyideskweb</code> <code>product</code>就是<code>webfanyi</code> key是个定值，具体就是从多次分析中发现，key没有变(一直取e)<br>是这个值asdjnjfenknafdfsdfsd ，最后我们需要看一下这个mysticTime的获取，发现它就是传入的a，a是const a &#x3D; (new Date).getTime(); 是获取当前时间</p><p>然后简单用python代码复现一下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSign</span>(<span class="params">e</span>):</span><br><span class="line">    d=<span class="string">&#x27;fanyideskweb&#x27;</span></span><br><span class="line">    u = <span class="string">&#x27;webfanyi&#x27;</span></span><br><span class="line">    t = <span class="string">&#x27;fsdsogkndfokasodnaso&#x27;</span></span><br><span class="line">    <span class="comment"># e = str(int(time.time()*1000))</span></span><br><span class="line">    payload = <span class="string">f&quot;client=<span class="subst">&#123;d&#125;</span>&amp;mysticTime=<span class="subst">&#123;e&#125;</span>&amp;product=<span class="subst">&#123;u&#125;</span>&amp;key=<span class="subst">&#123;t&#125;</span>&quot;</span></span><br><span class="line">    m = hashlib.md5() <span class="comment"># 创建md5对象</span></span><br><span class="line">    m.update(payload.encode()) <span class="comment"># 对payload进行编码</span></span><br><span class="line">    <span class="keyword">return</span> m.hexdigest() <span class="comment"># 返回md5值</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="解释："><a href="#解释：" class="headerlink" title="解释："></a>解释：</h4><p>这段代码使用了Python的f-string（格式化字符串字面量）来构建一个查询字符串，它与JavaScript模板字符串的作用类似。f-string允许你在字符串中直接嵌入表达式，并且会自动将表达式的值替换到字符串中。这里的<code>d</code>、<code>e</code>、<code>u</code>、<code>t</code>是变量，它们将被替换为它们的值。<br>这里的e为传入的时间，自此，将sign值和mysticTime替换成我们的值，就可以正确获取响应了，但是响应是加密的，还需要解密</p><h2 id="响应逆向分析"><a href="#响应逆向分析" class="headerlink" title="响应逆向分析"></a>响应逆向分析</h2><p>我们刚刚通过I函数的位置找到了获取sign值的函数，那么在此附近可以看一下解密的函数，因为猜测拿到响应就解密<br>在 下面（e，t，a）打上断电后单步调试F10  同时还发现下面有个feedback（反馈）函数中也有（e，t，a） 还有 解密，接下来就去确定变量值<br><a href="https://imgse.com/i/pAfBh9I"><img src="https://s21.ax1x.com/2024/11/23/pAfBh9I.png" alt="pAfBh9I.png"></a><br>发现此处有个些带key的变量 调试显示o 为“fsdsogkndfokasodnaso”   -&gt;后面发现这个是key<br><a href="https://imgse.com/i/pAfB43t"><img src="https://s21.ax1x.com/2024/11/23/pAfB43t.png" alt="pAfB43t.png"></a><br>然后继续调试有个e字典出现 带着<code>data：&quot;Z21kD9ZK1ke6ugku2ccWu-MeDWh3z252xRTQv-wZ6jddVo3tJLe7gIXz4PyxGl73nSfLAADyElSjjvrYdCvEP4pfohVVEX1DxoI0yhm36ytQNvu-WLU94qULZQ72aml6JKK7ArS9fJXAcsG7ufBIE0gd6fbnhFcsGmdXspZe-8whVFbRB_8Fc9JlMHh8DDXnskDhGfEscN_rfi-A-AHB3F9Vets82vIYpkGNaJOft_JA-m5cGEjo-UNRDDpkTz_NIAvo5PbATpkh7PSna2tHcE6Hou9GBtPLB67vjScwplB96-zqZKXJJEzU5HGF0oPDY_weAkXArzXyGLBPXFCnn_IWJDkGD4vqBQQAh2n52f48GD_cb-PSCT_8b-ESsKUI9NJa11XsdaUZxAc8TzrYnXwdcQbtl_kZGKhS6_rCtuNEBouA_lvM2CbS7TTtV2U4zVmJKpp-c6nt3yZePK3Av01GWn1pH_3sZbaPEx8DUjSbdp4i4iK-Mj4p2HPoph67DR7B9MFETYku_28SgP9xsKRRvFH4aHBHESWX4FDbwaU=&quot;</code><br>像是base64编码-&gt;发给ai后：您提供的字符串看起来像是一个Base64编码的字符串，但是包含了URL安全的字符（<code>-</code> 和 <code>_</code>）。在Python中，您可以使用<code>base64</code>模块来解码这样的字符串<br><a href="https://imgse.com/i/pAfB5gP"><img src="https://s21.ax1x.com/2024/11/23/pAfB5gP.png" alt="pAfB5gP.png"></a><br><a href="https://imgse.com/i/pAfBIjf"><img src="https://s21.ax1x.com/2024/11/23/pAfBIjf.png" alt="pAfBIjf.png"></a><br>之后e的传给了o<br><a href="https://imgse.com/i/pAfB7DS"><img src="https://s21.ax1x.com/2024/11/23/pAfB7DS.png" alt="pAfB7DS.png"></a></p><p>之后来到关键解密处 打上断点一步步调试：发现e还是data值<br>发现 <code>t=&quot;ydsecret://query/key/B*RGygVywfNBwpmBaZg*WT7SIOUP2T0C9WHMZN39j^DAdaZhAnxvGcCY6VYFwnHl&quot;</code><br><code>a = &quot;ydsecret://query/iv/C@lZe2YzHtZ2CYgaXKSVfsb7Y4QWHjITPPZ0nQp87fBeJ!Iv6v^6fvi2WN@bYpJ4&quot;</code><br>两个变量 是个不变的定值 然后用T()函数进行加工后赋值给o和n<br><a href="https://imgse.com/i/pAfBHHg"><img src="https://s21.ax1x.com/2024/11/23/pAfBHHg.png" alt="pAfBHHg.png"></a><br>T（）函数在生成sign时候见过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function T(e) &#123;</span><br><span class="line">    return i.createHash(&quot;md5&quot;).update(e).digest()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="贴一个ai解释："><a href="#贴一个ai解释：" class="headerlink" title="贴一个ai解释："></a>贴一个ai解释：</h4><p>您提供的代码片段看起来像是JavaScript中用于生成MD5哈希值的代码。这段代码使用了Node.js的<code>crypto</code>模块来创建一个MD5哈希。下面是这段代码的解释：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"><span class="comment">// 创建一个MD5哈希实例</span></span><br><span class="line"><span class="keyword">const</span> hash = crypto.<span class="title function_">createHash</span>(<span class="string">&#x27;md5&#x27;</span>);</span><br><span class="line"><span class="comment">// 更新哈希实例，添加需要哈希的数据</span></span><br><span class="line">hash.<span class="title function_">update</span>(e);</span><br><span class="line"><span class="comment">// 完成哈希计算并返回结果</span></span><br><span class="line"><span class="keyword">const</span> result = hash.<span class="title function_">digest</span>(<span class="string">&#x27;hex&#x27;</span>);</span><br></pre></td></tr></table></figure><p>这里的<code>e</code>应该是一个字符串或者是一个Buffer对象，代表你想要生成MD5哈希的数据。<code>update</code>方法用于添加数据到哈希对象中，而<code>digest</code>方法则用于计算最终的哈希值。<code>digest</code>方法的参数<code>&#39;hex&#39;</code>表示返回的哈希值应该是十六进制字符串格式。</p><h4 id="所以对加密的总结是："><a href="#所以对加密的总结是：" class="headerlink" title="所以对加密的总结是："></a>所以对加密的总结是：</h4><p>加密模式是AES-CBC 。 o，n 为一个密钥一个初始化向量，响应文本给的是密文<br>以十六进制去运算的 输出是utf-8</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">decodeResponse</span>(<span class="params">response</span>):</span><br><span class="line">        <span class="comment">#响应文本为base64编码过的</span></span><br><span class="line">        base64_encode_data = response.text.replace(<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;+&#x27;</span>).replace(<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        <span class="comment"># 将URL安全的Base64字符转换为标准Base64字符</span></span><br><span class="line">        base64_decode_data = base64.b64decode(base64_encode_data)</span><br><span class="line">        <span class="comment">#print(base64_decode_data)</span></span><br><span class="line">        t=<span class="string">&#x27;ydsecret://query/key/B*RGygVywfNBwpmBaZg*WT7SIOUP2T0C9WHMZN39j^DAdaZhAnxvGcCY6VYFwnHl&#x27;</span></span><br><span class="line">        a=<span class="string">&#x27;ydsecret://query/iv/C@lZe2YzHtZ2CYgaXKSVfsb7Y4QWHjITPPZ0nQp87fBeJ!Iv6v^6fvi2WN@bYpJ4&#x27;</span></span><br><span class="line">        <span class="comment">#这样三步后返回十六进制哈希值</span></span><br><span class="line">        </span><br><span class="line">        m = hashlib.md5()</span><br><span class="line">        m.update(t.encode()) </span><br><span class="line">        n=hashlib.md5()</span><br><span class="line">        n.update(a.encode()) </span><br><span class="line">key = m.digest() <span class="comment">#网页中的o </span></span><br><span class="line">iv = n.digest() <span class="comment">#网页中的n</span></span><br><span class="line">        <span class="comment">#创建AES对象 使用CBC模式</span></span><br><span class="line">        aes = AES.new(key, AES.MODE_CBC, iv) </span><br><span class="line">        data = aes.decrypt(base64_decode_data) <span class="comment">#解密</span></span><br><span class="line">        data= unpad(data,<span class="number">16</span>) <span class="comment">#去除PKCS7填充，确保数据长度是16的倍数</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#将解密后的字节数据解码为UTF-8格式的字符串</span></span><br><span class="line">        <span class="comment">#将字符串解析为JSON对象</span></span><br><span class="line">        res=json.loads(data.decode()) </span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;中文结果:&#x27;</span>,res[<span class="string">&#x27;translateResult&#x27;</span>][<span class="number">0</span>][<span class="number">0</span>][<span class="string">&#x27;tgt&#x27;</span>])</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;翻译未成功&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="自身不懂的点的解释"><a href="#自身不懂的点的解释" class="headerlink" title="自身不懂的点的解释"></a>自身不懂的点的解释</h4><ol><li><code>unpad</code>函数是用于去除PKCS7填充的函数。在加密数据时，为了满足某些加密算法对数据长度的要求（比如AES要求数据长度必须是块大小的整数倍），通常会添加一些填充字节。PKCS7是一种常用的填充方案，它规定填充的字节的值等于填充的长度。<br><code>unpad</code>函数的作用就是从解密后的数据中去除这些填充字节，恢复原始数据。在Python的<code>Crypto.Util.Padding</code>模块中提供了<code>unpad</code>函数，可以很方便地去除PKCS7填充</li><li>res[‘translateResult’] 是最外层的列表<br> [0] 获取第一组翻译结果<br> [0] 获取第一条翻译<br> [‘tgt’] 获取目标语言(target)的翻译文本</li></ol><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> unpad</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSign</span>(<span class="params">e</span>):</span><br><span class="line">    d=<span class="string">&#x27;fanyideskweb&#x27;</span></span><br><span class="line">    u = <span class="string">&#x27;webfanyi&#x27;</span></span><br><span class="line">    t = <span class="string">&#x27;fsdsogkndfokasodnaso&#x27;</span></span><br><span class="line">    <span class="comment"># e = str(int(time.time()*1000))</span></span><br><span class="line">    payload = <span class="string">f&quot;client=<span class="subst">&#123;d&#125;</span>&amp;mysticTime=<span class="subst">&#123;e&#125;</span>&amp;product=<span class="subst">&#123;u&#125;</span>&amp;key=<span class="subst">&#123;t&#125;</span>&quot;</span></span><br><span class="line">    m = hashlib.md5() <span class="comment"># 创建md5对象</span></span><br><span class="line">    m.update(payload.encode()) <span class="comment"># 对payload进行编码</span></span><br><span class="line">    <span class="keyword">return</span> m.hexdigest() <span class="comment"># 返回md5值</span></span><br><span class="line"></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">&#x27;OUTFOX_SEARCH_USER_ID&#x27;</span>: <span class="string">&#x27;1760702234@221.2.164.11&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;OUTFOX_SEARCH_USER_ID_NCOO&#x27;</span>: <span class="string">&#x27;1426232579.0837824&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DICT_DOCTRANS_SESSION_ID&#x27;</span>: <span class="string">&#x27;MzQ3NDhmNmMtZGEyYy00OWRjLWJjOTMtZWU2ODFmMmExYzk2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;_uetsid&#x27;</span>: <span class="string">&#x27;161449f0a69a11ef93f8d9d82f396997&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;_uetvid&#x27;</span>: <span class="string">&#x27;16144de0a69a11ef9082e976e1786dda&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;application/json, text/plain, */*&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;Cookie&#x27;: &#x27;OUTFOX_SEARCH_USER_ID=1760702234@221.2.164.11; OUTFOX_SEARCH_USER_ID_NCOO=1426232579.0837824; DICT_DOCTRANS_SESSION_ID=MzQ3NDhmNmMtZGEyYy00OWRjLWJjOTMtZWU2ODFmMmExYzk2; _uetsid=161449f0a69a11ef93f8d9d82f396997; _uetvid=16144de0a69a11ef9082e976e1786dda&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;https://fanyi.youdao.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Pragma&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://fanyi.youdao.com/&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Sec-Fetch-Dest&#x27;</span>: <span class="string">&#x27;empty&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Sec-Fetch-Mode&#x27;</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Sec-Fetch-Site&#x27;</span>: <span class="string">&#x27;same-site&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-ch-ua&#x27;</span>: <span class="string">&#x27;&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="string">&#x27;&quot;macOS&quot;&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">t = <span class="built_in">str</span>(<span class="built_in">int</span>(time.time()*<span class="number">1000</span>))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decodeResponse</span>(<span class="params">response</span>):</span><br><span class="line">        <span class="comment">#响应文本为base64编码过的</span></span><br><span class="line">        base64_encode_data = response.text.replace(<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;+&#x27;</span>).replace(<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        <span class="comment"># 将URL安全的Base64字符转换为标准Base64字符</span></span><br><span class="line">        base64_decode_data = base64.b64decode(base64_encode_data)</span><br><span class="line">        <span class="comment">#print(base64_decode_data)</span></span><br><span class="line">        t=<span class="string">&#x27;ydsecret://query/key/B*RGygVywfNBwpmBaZg*WT7SIOUP2T0C9WHMZN39j^DAdaZhAnxvGcCY6VYFwnHl&#x27;</span></span><br><span class="line">        a=<span class="string">&#x27;ydsecret://query/iv/C@lZe2YzHtZ2CYgaXKSVfsb7Y4QWHjITPPZ0nQp87fBeJ!Iv6v^6fvi2WN@bYpJ4&#x27;</span></span><br><span class="line">        <span class="comment">#这样三步后返回十六进制哈希值</span></span><br><span class="line">        </span><br><span class="line">        m = hashlib.md5()</span><br><span class="line">        m.update(t.encode()) </span><br><span class="line">        n=hashlib.md5()</span><br><span class="line">        n.update(a.encode()) </span><br><span class="line">        key = m.digest() <span class="comment">#网页中的o </span></span><br><span class="line">        iv = n.digest() <span class="comment">#网页中的n</span></span><br><span class="line">        <span class="comment">#创建AES对象 使用CBC模式</span></span><br><span class="line">        aes = AES.new(key, AES.MODE_CBC, iv) </span><br><span class="line">        data = aes.decrypt(base64_decode_data) <span class="comment">#解密</span></span><br><span class="line">        data= unpad(data,<span class="number">16</span>) <span class="comment">#去除PKCS7填充，确保数据长度是16的倍数</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#将解密后的字节数据解码为UTF-8格式的字符串</span></span><br><span class="line">        <span class="comment">#将字符串解析为JSON对象</span></span><br><span class="line">        res=json.loads(data.decode()) </span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;中文结果:&#x27;</span>,res[<span class="string">&#x27;translateResult&#x27;</span>][<span class="number">0</span>][<span class="number">0</span>][<span class="string">&#x27;tgt&#x27;</span>])</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;翻译未成功&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    word = <span class="built_in">input</span>(<span class="string">&#x27;请输入要翻译的词：&#x27;</span>)</span><br><span class="line">    data = &#123;</span><br><span class="line">    <span class="string">&#x27;i&#x27;</span>: word,</span><br><span class="line">    <span class="string">&#x27;from&#x27;</span>: <span class="string">&#x27;auto&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;to&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;useTerm&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;domain&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;dictResult&#x27;</span>: <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;keyid&#x27;</span>: <span class="string">&#x27;webfanyi&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sign&#x27;</span>: getSign(t),</span><br><span class="line">    <span class="string">&#x27;client&#x27;</span>: <span class="string">&#x27;fanyideskweb&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;product&#x27;</span>: <span class="string">&#x27;webfanyi&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;appVersion&#x27;</span>: <span class="string">&#x27;1.0.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;vendor&#x27;</span>: <span class="string">&#x27;web&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;pointParam&#x27;</span>: <span class="string">&#x27;client,mysticTime,product&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mysticTime&#x27;</span>: t,</span><br><span class="line">    <span class="string">&#x27;keyfrom&#x27;</span>: <span class="string">&#x27;fanyi.web&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mid&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;screen&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;model&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;network&#x27;</span>: <span class="string">&#x27;wifi&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;abtest&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;yduuid&#x27;</span>: <span class="string">&#x27;abcdefg&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    response = requests.post(<span class="string">&#x27;https://dict.youdao.com/webtranslate&#x27;</span>, cookies=cookies, headers=headers, data=data)</span><br><span class="line">    <span class="comment"># print(response.text)</span></span><br><span class="line">    decodeResponse(response)</span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/post/20250201222237.html"/>
      <url>/post/20250201222237.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
